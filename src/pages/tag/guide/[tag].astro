---
import Card from '../../../components/Card.astro';
import HomeHeader from '../../../components/HomeHeader.astro';
import Nav from '../../../components/Nav.astro';
import SubNav from '../../../components/SubNav.astro';
import BaseHead from '../../../components/Head/BaseHead.astro';

export async function getStaticPaths() {
  const allPosts = await Astro.glob('../../**/*.mdx');
  // Extract tags with type "guide" and create a Set to ensure uniqueness
  let tags = new Set(allPosts.flatMap(post => 
  post.frontmatter.tags 
    ? post.frontmatter.tags
        .filter(tagObject => tagObject.type === "guide")
        .map(tagObject => tagObject.tag)
    : []  // Return an empty array if there are no tags
));
  // Convert the Set to an Array
  tags = Array.from(tags);
  tags = tags.filter(element => element !== undefined);

  // Create paths for each tag
  const paths = tags.map(tag => {    
    return {
      params: { tag }
    };
  });

  return paths;
}

const { tag } = Astro.params;

let filteredPosts = [];
// Since we cannot share allPosts between getStaticPaths and the component,
// we need to fetch them again here for filtering
let filteredGuides = (await Astro.glob('../../**/*.mdx')).filter(post => post.frontmatter.tags && post.frontmatter.tags.find(postTag => postTag.tag === tag));
let filteredEvents = (await Astro.glob('../../**/**/*.mdx')).filter(post => post.frontmatter.tags && post.frontmatter.tags.find(postTag => postTag.tag === tag));

filteredPosts.push(...filteredGuides, ...filteredEvents);


// let allPostsIncludingMultipleDates = [];
const description = 'An easier way to find  things to do in greater Chattanooga';
const title = 'thingshappening';
const seoDescription = 'An easier way to find  things happening';

let allPostsIncludingMultipleDates = [];
filteredPosts.forEach((p) => {
  let baseData = Object.assign({}, p.frontmatter, {url: p.url});  // Create a copy of the base data

  if (baseData.eventDates) {
    baseData.eventDates.forEach((date, i) => {
      const again = Object.assign({}, baseData, {pubDate: date, title: `${baseData.title}`, url: `${baseData.url}/${date}`}); 

      allPostsIncludingMultipleDates.push(again);
    })
  } else {
    allPostsIncludingMultipleDates.push(baseData); // Push base data if no eventDates
  }
});


---

<html>
  <head>
    <BaseHead title={title} description={seoDescription} />
    <meta charset="utf-8" />
    <script is:inline>(function(w,d,e,u,f,l,n){w[f]=w[f]||function(){(w[f].q=w[f].q||[])
      .push(arguments);},l=d.createElement(e),l.async=1,l.src=u,
      n=d.getElementsByTagName(e)[0],n.parentNode.insertBefore(l,n);})
      (window,document,'script','https://assets.mailerlite.com/js/universal.js','ml');
      ml('account', '930023')</script>
  </head>
  <body class=" text-black font-body leading-normal personality-casual">
    <Nav />

    <main class="py-12 lg:pt-20">
      <article class="max-w-6xl mx-auto px-3">
        <HomeHeader title={`#${tag}`} description={description} />
        <div class="ml-embedded" data-form="ZoK6PR"></div>
  
        <section class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 py-8" data-test="articles-section">
          {allPostsIncludingMultipleDates.map(p => <div class="col-span-1">
            <Card post={p} highlighted={tag} />
          </div>)}
        </section>
      </article>
    </main>
  </body>
</html>
