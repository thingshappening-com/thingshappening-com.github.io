---
import Card from '../../components/Card.astro';
import HomeHeader from '../../components/HomeHeader.astro';
import Nav from '../../components/Nav.astro';
import BaseHead from '../../components/Head/BaseHead.astro';

export async function getStaticPaths() {
  const allPosts = await Astro.glob('../**/*.md');

  let tags = new Set(allPosts.flatMap(post => post.frontmatter.tags));
  tags = Array.from(tags);
  tags = tags.filter(element => element !== undefined);

  const paths = tags.map(tag => {    
    return {
      params: { tag },
    };
  });

  return paths;
}

const { tag } = Astro.params;

// Since we cannot share allPosts between getStaticPaths and the component,
// we need to fetch them again here for filtering
let filteredPosts = (await Astro.glob('../**/*.md')).filter(post => post.frontmatter.tags && post.frontmatter.tags.includes(tag));

let allPostsIncludingMultipleDates = [];
const description = 'The easiest way to find out about things happening in greater Chattanooga';
const title = 'thingshappening';
const seoDescription = 'The easiest way to find out about things happening';

filteredPosts.forEach((p) => {
  let baseData = Object.assign({}, p.frontmatter, {url: p.url});  // Create a copy of the base data

  if (baseData.eventDates) {
    baseData.eventDates.forEach((date, i) => {
      const again = Object.assign({}, baseData, {pubDate: date, title: `${baseData.title}`, url: `${baseData.url}/${date}`}); 

      allPostsIncludingMultipleDates.push(again);
    })
  } else {
    allPostsIncludingMultipleDates.push(baseData); // Push base data if no eventDates
  }
});

const today = new Date();
today.setDate(today.getDate() - 1);  // Move back by one day
today.setHours(0,0,0,0);

allPostsIncludingMultipleDates = allPostsIncludingMultipleDates.filter(post => new Date(post.pubDate) >= today);
allPostsIncludingMultipleDates = allPostsIncludingMultipleDates.sort((a, b) => {
    const dateA = new Date(a.pubDate);
    const dateB = new Date(b.pubDate);

    return dateA - dateB;
});
---

<html>
  <head>
    <BaseHead title={title} description={seoDescription} />
    <meta charset="utf-8" />
    <script is:inline>(function(w,d,e,u,f,l,n){w[f]=w[f]||function(){(w[f].q=w[f].q||[])
      .push(arguments);},l=d.createElement(e),l.async=1,l.src=u,
      n=d.getElementsByTagName(e)[0],n.parentNode.insertBefore(l,n);})
      (window,document,'script','https://assets.mailerlite.com/js/universal.js','ml');
      ml('account', '930023')</script>
  </head>
  <body class="bg-white text-black font-body leading-normal personality-casual">
    <Nav />

    <main class="py-12 lg:pt-20">
      <article class="max-w-6xl mx-auto px-3">
        <HomeHeader title={`#${tag}`} description={description} />
        <div class="ml-embedded" data-form="ZoK6PR"></div>
  
        <div class="date-filter-options">
          <a href="/chattanooga/events/this-weekend">This Weekend</a>
          <a href="/chattanooga/events/this-week">This Week</a>
          <a href="/chattanooga/events/all-weekends">Future Weekends</a>
          <a href="/chattanooga/events/this-month">This Month</a>
          <a href="/tag/free">#free</a>
          <a href="/tag/kid-friendly">#kid-friendly</a>
          <a href="/chattanooga/bookshelf">Local Bookshelf <span style="color: #fd2d78;">(new)</span></a>
        </div>
        <section class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 py-8" data-test="articles-section">
          {allPostsIncludingMultipleDates.map(p => <div class="col-span-1">
            <Card post={p} highlighted={tag} />
          </div>)}
        </section>
      </article>
    </main>
  </body>
</html>
