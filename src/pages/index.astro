---
import BaseHead from '../components/Head/BaseHead.astro';
import Nav from '../components/Nav.astro';
import SubNav from '../components/SubNav.astro';
import HomeHeader from '../components/HomeHeader.astro';
import Card from '../components/Card.astro';
import Footer from '../components/Footer/Footer.astro'
// import { prefetch } from 'astro:prefetch';
// import { object } from 'astro/zod';

interface MarkdownFrontmatter {
  date: number;
}

const title = 'thingshappening';
const description = 'The easiest way to find out about things happening in greater Chattanooga';
const seoDescription = 'The easiest way to find out about things happening';

let allGuides = await Astro.glob<MarkdownFrontmatter>('./chattanooga/guides/*.md');
let guideFormatted = [];

allGuides.forEach((p) => {
  let baseData = Object.assign({}, p.frontmatter, {url: p.url});  // Create a copy of the base data

  guideFormatted.push(baseData); // Push base data if no eventDates
});
  // console.log(allGuides);
  // allGuides.forEach((g) => console.log(g.frontmatter));
  // console.dir(allGuides);
let allPosts = await Astro.glob<MarkdownFrontmatter>('./chattanooga/**/*.md');

let allPostsIncludingMultipleDates = [];

allPosts.forEach((p) => {
  let baseData = Object.assign({}, p.frontmatter, {url: p.url});  // Create a copy of the base data

  if (baseData.eventDates) {
    baseData.eventDates.forEach((date, i) => {
      let title = baseData.eventLabel ? `${baseData.title}` : `${baseData.title}`
      const again = Object.assign({}, baseData, {pubDate: date, title: title, url: `${baseData.url}/${date}`}); 

      allPostsIncludingMultipleDates.push(again);
    })
  } else {
    allPostsIncludingMultipleDates.push(baseData); // Push base data if no eventDates
  }
});


const today = new Date();
today.setDate(today.getDate() - 1);  // Move back by one day
today.setHours(0,0,0,0);

allPostsIncludingMultipleDates = allPostsIncludingMultipleDates.filter(post => new Date(post.pubDate) >= today);
allPostsIncludingMultipleDates = allPostsIncludingMultipleDates.sort((a, b) => {
    const dateA = new Date(a.pubDate);
    const dateB = new Date(b.pubDate);

    return dateA - dateB;
});

---

<html lang="en">

<head>
  <BaseHead title={title} description={seoDescription} />
</head>

<body class="bg-white text-black font-body leading-normal personality-casual">
  <Nav />
  <main class="py-12 lg:pt-20">
    <article class="max-w-6xl mx-auto px-3">
      <HomeHeader title={title} description={description} />      
      
      <header style="margin: 0 !important" class="pt-10 text-center content">
        <h1>Guides</h1>  
      </header>
      <section class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 py-8" data-test="articles-section">
        {guideFormatted.map(g => <div class="col-span-1">
          <Card post={g} />
        </div>)}
      </section>
    </article>

    <header id="guides" style="margin: 0 !important" class="pt-10 text-center content">
      <h1>Calendar</h1>  
    </header>
    <article class="max-w-6xl mx-auto px-3">
      <SubNav />
      <section class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 py-8" data-test="articles-section">
        {allPostsIncludingMultipleDates.map(p => <div class="col-span-1">
          <Card post={p} />
        </div>)}
      </section>
    </article>
  </main>

  <Footer />
</body>
</html>