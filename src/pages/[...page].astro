---
import BaseHead from '../components/Head/BaseHead.astro';
import Nav from '../components/Nav.astro';
import SubNav from '../components/SubNav.astro';
import HomeHeader from '../components/HomeHeader.astro';
import Card from '../components/Card.astro';
import Footer from '../components/Footer/Footer.astro'
import Paginator from '../components/Paginator.astro'


export async function getStaticPaths({ paginate }) {  
  // let allPosts = await Astro.glob<MarkdownFrontmatter>('./chattanooga/events/**/*.md');

  // let allPostsIncludingMultipleDates = [];

  // allPosts.forEach((p) => {
  //   let baseData = Object.assign({}, p.frontmatter, {url: p.url});  // Create a copy of the base data

  //   if (baseData.eventDates) {
  //     baseData.eventDates.forEach((date, i) => {
  //       let title = baseData.eventLabel ? `${baseData.title}` : `${baseData.title}`
  //       const again = Object.assign({}, baseData, {pubDate: date, title: title, url: `${baseData.url}/${date}`}); 

  //       allPostsIncludingMultipleDates.push(again);
  //     })
  //   } else {
  //     allPostsIncludingMultipleDates.push(baseData); // Push base data if no eventDates
  //   }
  // });

  // const today = new Date();
  // today.setDate(today.getDate());  // Move back two days
  // today.setHours(0,0,0,0);

  // allPostsIncludingMultipleDates = allPostsIncludingMultipleDates.filter(post => new Date(post.pubDate) >= today);
  // allPostsIncludingMultipleDates = allPostsIncludingMultipleDates.sort((a, b) => {
  //     const dateA = new Date(a.pubDate);
  //     const dateB = new Date(b.pubDate);

  //     return dateA - dateB;
  // });

  // return paginate(allPostsIncludingMultipleDates, {pageSize: 15})

  let allGuides = await Astro.glob<MarkdownFrontmatter>('./chattanooga/guides/*.md');
  return paginate(allGuides, {pageSize: 15})
}

let allGuides = await Astro.glob<MarkdownFrontmatter>('./chattanooga/guides/*.md');
let guideFormatted = [];

allGuides.forEach((g) => {
  let baseData = Object.assign({}, g.frontmatter, {url: g.url});  // Create a copy of the base data

  guideFormatted.push(baseData); // Push base data if no eventDates
});
guideFormatted = guideFormatted.sort((a, b) => new Date(b.lastUpdated) - new Date(a.lastUpdated));

const { page } = Astro.props;
let pageTitle = 'thingshappening';
const pageDescription = 'The easiest way to find out about things to do in greater Chattanooga';
let seoTitle = 'thingshappening.com';
let seoDescription = '';

---

<html lang="en">

<head>

  <script is:inline>(function(w,d,e,u,f,l,n){w[f]=w[f]||function(){(w[f].q=w[f].q||[])
  .push(arguments);},l=d.createElement(e),l.async=1,l.src=u,
  n=d.getElementsByTagName(e)[0],n.parentNode.insertBefore(l,n);})
  (window,document,'script','https://assets.mailerlite.com/js/universal.js','ml');
  ml('account', '930023')</script>

  <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-2976969447542443"
  crossorigin="anonymous"></script>
  
  <BaseHead title={seoTitle} description={seoDescription} />
</head>
<body class="bg-white text-black font-body leading-normal personality-casual">
  <Nav />

  
  <main class="py-12 lg:pt-20">
    <article class="max-w-6xl mx-auto px-3">
      <HomeHeader title={pageTitle} description={pageDescription} />

      <div class="ml-embedded" data-form="ZoK6PR"></div>

      <!-- <header id="guides" style="margin: 0 !important" class="pt-14 text-center content">
        <h1>Guides</h1>  
      </header> -->
      
      <section class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 py-8" data-test="articles-section">
        {guideFormatted.map(g => <div class="col-span-1">
          <Card post={g} />
        </div>)}
      </section>
    </article>

    <!-- <header style="margin: 0 !important" class="pt-14 text-center content">
      <h1>Calendar</h1>  
    </header>


    <article class="max-w-6xl mx-auto px-3">
      <SubNav />
      <section class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 py-8" data-test="articles-section">
        {page.data.map(p => <div class="col-span-1">
          <Card post={p} />
        </div>)}
      </section>
    </article> -->
    <Paginator page={page} />
  </main>
  <Footer />
</body>
</html>