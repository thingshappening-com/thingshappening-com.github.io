---
import BaseHead from '../components/Head/BaseHead.astro';
import Nav from '../components/Nav.astro';
import SubNav from '../components/SubNav.astro';
import HomeHeader from '../components/HomeHeader.astro';
import Card from '../components/Card.astro';
import Footer from '../components/Footer/Footer.astro'
import Paginator from '../components/Paginator.astro'

export async function getStaticPaths({ paginate }) {  
  // Load events
  let allPosts = await Astro.glob<MarkdownFrontmatter>('./chattanooga/events/**/*.md');
  let allPostsIncludingMultipleDates = [];

  allPosts.forEach((p) => {
    let baseData = Object.assign({}, p.frontmatter, { url: p.url });

    if (baseData.eventDates) {
      baseData.eventDates.forEach((date) => {
        const title = baseData.eventLabel ? `${baseData.title}` : `${baseData.title}`;
        const again = Object.assign({}, baseData, {
          pubDate: date,
          title,
          url: `${baseData.url}/${date}`,
          type: 'event',
        });

        allPostsIncludingMultipleDates.push(again);
      });
    } else {
      allPostsIncludingMultipleDates.push(Object.assign({}, baseData, { type: 'event' }));
    }
  });

  const today = new Date();
  today.setHours(0, 0, 0, 0);

  allPostsIncludingMultipleDates = allPostsIncludingMultipleDates
    .filter((post) => new Date(post.pubDate) >= today)
    .sort((a, b) => new Date(a.pubDate) - new Date(b.pubDate));

  // Load guides
  let allGuides = await Astro.glob<MarkdownFrontmatter>('./chattanooga/guides/*.mdx');
  let formattedGuides = allGuides.map((g) =>
    Object.assign({}, g.frontmatter, { url: g.url, type: 'guide' })
  );

  let combined = [...allPostsIncludingMultipleDates, ...formattedGuides].sort((a, b) => {
    const dateA = new Date(a.pubDate || a.lastUpdated);
    const dateB = new Date(b.pubDate || b.lastUpdated);
    return dateB - dateA;
  });

  return paginate(combined, { pageSize: 15 });
}

const { page } = Astro.props;

let guides = page.data.filter((p) => p.type === 'guide');
let events = page.data.filter((p) => p.type === 'event');

let pageTitle = 'thingshappening';
const pageDescription = 'A simple way to find things to do in greater Chattanooga';
let seoTitle = 'thingshappening.com';
let seoDescription = '';
---


<html lang="en">

<head>

  <script async>(function(w,d,e,u,f,l,n){w[f]=w[f]||function(){(w[f].q=w[f].q||[])
  .push(arguments);},l=d.createElement(e),l.async=1,l.src=u,
  n=d.getElementsByTagName(e)[0],n.parentNode.insertBefore(l,n);})
  (window,document,'script','https://assets.mailerlite.com/js/universal.js','ml');
  ml('account', '930023')</script>

  <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-2976969447542443"
  crossorigin="anonymous"></script>
  
  <BaseHead title={seoTitle} description={seoDescription} />
</head>
<body class="text-black font-body leading-normal personality-casual">
  <Nav />

  
  <main class="py-12 lg:pt-20">
    <article class="max-w-6xl mx-auto px-3">
      <HomeHeader title={pageTitle} description={pageDescription} />

      <div class="ml-embedded" data-form="ZoK6PR"></div>

      <header id="guides" style="margin: 0 !important" class="pt-14 text-center content">
        <h1>Guides</h1>  
      </header>
      
      <section class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 py-8" data-test="articles-section">
        {guides.map(g => <div class="col-span-1">
          <Card post={g} />
        </div>)}
      </section>
      
    </article>

    <header style="margin: 0 !important" class="pt-14 text-center content">
      <h1>Calendar</h1>  
    </header>
    <article class="max-w-6xl mx-auto px-3">
      <SubNav />
      <section class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 py-8" data-test="articles-section">
        {events.map(e => <div class="col-span-1">
          <Card post={e} />
        </div>)}
      </section>
    </article>

    <Paginator page={page} />
  </main>
  <Footer />
</body>
</html>